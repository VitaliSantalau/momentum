(()=>{"use strict";const t=[...document.querySelectorAll("[data-element]")].reduce(((t,e)=>(t[e.dataset.element]=e,t)),{}),{time:e,date:i,greeting:s,body:a,sliderPrev:n,sliderNext:r,weather:o,quoteContainer:l,audioPlayer:h,setting:c,todo:u}=t;new class{constructor(t){this.element=t,this.render(),this.update()}render(){this.element.textContent=this.getCurrent()}getCurrent(){return(new Date).toLocaleTimeString()}update(){setInterval((()=>this.render()),1e3)}}(e),new class{currentLanguage=localStorage.getItem("language")||"en";local={ru:"ru-RU",en:"en-US"};constructor(t){this.element=t,this.render(),this.initEvents(),this.update()}render(){this.element.textContent=this.getCurrent()}getCurrent(){return(new Date).toLocaleDateString(this.local[this.currentLanguage],{weekday:"long",day:"numeric",month:"long"})}initEvents(){document.addEventListener("change-language",(t=>{this.currentLanguage=t.detail.language,this.getCurrent()}))}update(){setInterval((()=>this.render()),1e3)}}(i),new class{currentName="undefined"===localStorage.getItem("name")?"":localStorage.getItem("name");currentLanguage=localStorage.getItem("language")||"en";text={ru:{0:"Доброй ночи",1:"Доброе утро",2:"Добрый день",3:"Добрый вечер"},en:{0:"Good nigh",1:"Good morning",2:"Good afternoon",3:"Good evening"}};placeHolder={ru:"Ваше имя здесь",en:"your name is here"};constructor(t){this.element=t,this.greeting=t.querySelector(".greeting"),this.name=t.querySelector(".name"),this.render(),this.initEvents(),this.update()}render(){this.getGreeting(),this.name.placeholder=this.placeHolder[this.currentLanguage],this.name.value=this.currentName}getGreeting(){this.greeting.textContent=`${this.getTimeOfDay()}`,this.name.placeholder=this.placeHolder[this.currentLanguage]}getTimeOfDay(){return this.text[this.currentLanguage][this.getNumberOfTime()]}getNumberOfTime(){return Math.floor((new Date).getHours()/6)}initEvents(){this.name.addEventListener("input",(t=>{localStorage.setItem("name",t.target.value)})),document.addEventListener("change-language",(t=>{this.currentLanguage=t.detail.language,this.getGreeting()}))}update(){setInterval((()=>this.getGreeting()),1e3)}}(s),new class{currentSource=localStorage.getItem("source")||"github";sourcesTag=localStorage.getItem("sourcesTag");current;timeOfDay;dataFlickr;timesOfDay={0:"night",1:"morning",2:"afternoon",3:"evening"};constructor(t,e,i){this.element=t,this.prev=e,this.next=i,this.current=this.getRandom(),this.timeOfDay=this.getTimeOfDay(),this.render(),this.initEvents()}render(){this.setBg()}async setBg(){const t=new Image;t.src=await this.getSrc(),t.onload=()=>this.element.style.backgroundImage=`url(${t.src})`}setFlickrBg(){const t=new Image,e=this.getRandom(this.dataFlickrTotal);t.src=this.dataFlickr.photos.photo[e].url_l,t.onload=()=>this.element.style.backgroundImage=`url(${t.src})`}getSrc(){return"github"===this.currentSource?this.getGitHubSrc():"unsplash"===this.currentSource?this.getUnsplashSrc():"flickr"===this.currentSource?this.getFlickrSrc():void 0}getGitHubSrc(){return`\n      https://raw.githubusercontent.com/VitaliSantalau/stage1-tasks/assets/images/${this.timeOfDay}/${this.toFormatCurrent()}.jpg\n    `}async getUnsplashSrc(){const t=`https://api.unsplash.com/photos/random?orientation=landscape&query=${this.getQueryImage()}&client_id=6eGGVmMkEL9M8QnoMSzEvg-0nTA9KgwnTIp9KK3axwg`,e=await fetch(t);return(await e.json()).urls.regular}async getFlickrSrc(){const t=`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=38295d6e42cd056fa23d90e70c83e128&tags=${this.getQueryImage()}&extras=url_l&format=json&nojsoncallback=1`,e=await fetch(t);return this.dataFlickr=await e.json(),this.handleDataFlickr()}handleDataFlickr(){this.dataFlickrTotal=this.dataFlickr.photos.perpage-1;const t=this.getRandom(this.dataFlickrTotal);return this.dataFlickr.photos.photo[t].url_l}getQueryImage(){return this.sourcesTag?this.sourcesTag:this.getTimeOfDay()}getTimeOfDay(){return this.timesOfDay[this.getNumberOfTime()]}getNumberOfTime(){return Math.floor((new Date).getHours()/6)}getRandom(t=20){return Math.floor(Math.random()*t)+1}toFormatCurrent(){return`${this.current}`.padStart(2,"0")}initEvents(){this.prev.addEventListener("pointerdown",(()=>{"github"===this.currentSource&&(this.current--,this.checkIndexSlide(),this.setBg()),"unsplash"===this.currentSource&&this.setBg(),"flickr"===this.currentSource&&this.setFlickrBg()})),this.next.addEventListener("pointerdown",(()=>{"github"===this.currentSource&&(this.current++,this.checkIndexSlide(),this.setBg()),"unsplash"===this.currentSource&&this.setBg(),"flickr"===this.currentSource&&this.setFlickrBg()})),document.addEventListener("change-source",(t=>{this.currentSource=t.detail.source,this.dataFlickr=null,this.setBg()})),document.addEventListener("change-sourcesTag",(t=>{this.sourcesTag=t.detail.sourcesTag,this.setBg()}))}checkIndexSlide(){this.current>20&&(this.current=1),this.current<=0&&(this.current=20)}}(a,n,r),new class{currentLanguage=localStorage.getItem("language")||"en";cityName={ru:localStorage.getItem("city")||"Минск",en:localStorage.getItem("city")||"Minsk"};windText={ru:"Скорость ветра",en:"Wind speed"};humidityText={ru:"Влажность",en:"Humidity"};msText={ru:"м/с",en:"m/s"};placeHolder={ru:"введите город",en:"enter a town"};constructor(t){this.element=t,this.city=this.element.querySelector(".city"),this.icon=this.element.querySelector(".weather-icon"),this.error=this.element.querySelector(".weather-error"),this.temperature=this.element.querySelector(".temperature"),this.description=this.element.querySelector(".weather-description"),this.wind=this.element.querySelector(".wind"),this.humidity=this.element.querySelector(".humidity"),this.render()}render(){this.city.value=this.cityName[this.currentLanguage],this.city.placeholder=this.placeHolder[this.currentLanguage],this.getWeather(),this.initEvents()}async getWeather(){const t=`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName[this.currentLanguage]}&lang=${this.currentLanguage}&appid=909202fe44f41f51f5e8e51cdf753b6e&units=metric`,e=await fetch(t),i=await e.json();try{this.showWeather(i)}catch(t){this.showError(i.message)}}showWeather(t){this.clearOutput(),this.icon.className="weather-icon owf",this.icon.classList.add(`owf-${t.weather[0].id}`),this.temperature.textContent=`${t.main.temp.toFixed(0)}°C`,this.description.textContent=t.weather[0].description,this.wind.textContent=`${this.windText[this.currentLanguage]}: ${t.wind.speed.toFixed(0)} ${this.msText[this.currentLanguage]}`,this.humidity.textContent=`${this.humidityText[this.currentLanguage]}: ${t.main.humidity.toFixed(0)}%`}showError(t){"Nothing to geocode"===t&&"en"===this.currentLanguage&&(this.error.textContent=t),"Nothing to geocode"===t&&"ru"===this.currentLanguage&&(this.error.textContent="Нечего искать"),"city not found"===t&&"en"===this.currentLanguage&&(this.error.textContent=t),"city not found"===t&&"ru"===this.currentLanguage&&(this.error.textContent="Город не найден")}initEvents(){this.city.addEventListener("change",(t=>{this.cityName.en=t.target.value,this.cityName.ru=t.target.value,localStorage.setItem("city",t.target.value),this.getWeather()})),document.addEventListener("change-language",(t=>{this.currentLanguage=t.detail.language,this.city.value=this.cityName[this.currentLanguage],this.city.placeholder=this.placeHolder[this.currentLanguage],this.getWeather()}))}clearOutput(){this.icon.className="weather-icon owf",this.temperature.textContent="",this.description.textContent="",this.wind.textContent="",this.humidity.textContent="",this.error.textContent=""}}(o),new class{current;currentLanguage=localStorage.getItem("language")||"en";constructor(t){this.element=t,this.quote=this.element.querySelector(".quote"),this.author=this.element.querySelector(".author"),this.current=this.getRandom(),this.render(),this.initEvents()}render(){this.getQuotes()}async getQuotes(){const t=`./assets/json/quotes-${this.currentLanguage}.json`,e=await fetch(t),i=await e.json();try{this.showQuote(i[this.current])}catch(t){}}showQuote(t){this.quote.textContent=t.quote,this.author.textContent=t.author}getRandom(){return Math.floor(15*Math.random())}initEvents(){this.element.querySelector(".change-quote").addEventListener("pointerdown",(()=>{this.current=this.getRandom(),this.getQuotes()})),document.addEventListener("change-language",(t=>{this.currentLanguage=t.detail.language,this.getQuotes()}))}}(l),new class{current=0;currentItemPlayList=0;isPlay=!1;isMousedownProgress=!1;needToggleVolume=!1;constructor(t){this.element=t,this.track=new Audio,this.nameTrack=t.querySelector(".name-track"),this.currentDuration=t.querySelector(".current"),this.totalDuration=t.querySelector(".total"),this.prevButton=t.querySelector(".play-prev"),this.playButton=t.querySelector(".play"),this.nextButton=t.querySelector(".play-next"),this.volumeButton=t.querySelector(".volume"),this.volumeRange=t.querySelector(".volume-range"),this.playList=t.querySelector(".play-list"),this.progress=t.querySelector(".progress"),this.render(),this.initEvents()}render(){(async()=>{const t=await fetch("./assets/json/sounds.json");this.data=await t.json();try{this.renderList(),this.setTrack(),this.renderNameTrack(),this.renderCurrentDuration(),this.renderTotalTime()}catch(t){}})()}renderNameTrack(){this.nameTrack.textContent=this.data[this.current].title}renderCurrentDuration(){this.currentDuration.textContent=this.formatSec(this.track.currentTime)}renderTotalTime(){this.totalDuration.textContent=this.formatSec(this.track.duration)}formatSec(t){if(!t)return"00:00";let e=Math.floor(t/60),i=Math.floor(t%60);return e<10&&(e=`0${e}`),i<10&&(i=`0${i}`),`${e}:${i}`}renderList(){const t=[];for(let e=0;e<this.data.length;e++){const i=`\n      <li class="play-item">\n        <button class="play-item-button player-icon" value="${e}"></button>\n        <div>${this.data[e].title}</div>\n      </li>\n      `;t.push(i)}this.playList.innerHTML=t.join(""),this.playListItems=this.playList.querySelectorAll(".play-item"),this.playListButtons=this.playList.querySelectorAll(".play-item-button");for(let t=0;t<this.playListButtons.length;t++)this.playListButtons[t].addEventListener("pointerdown",(t=>{this.current=t.target.value,this.current==this.currentItemPlayList?this.isPlay?this.pause():this.play():(this.currentItemPlayList=this.current,this.progress.style.background="linear-gradient(to right, #ff0000 0%, #ff0000 0%, #fff 0%, #fff 100%)",this.setTrack(),this.renderNameTrack(),this.play())}))}setTrack(){this.track.src=this.data[this.current].src,this.track.currentTime=0}next(){this.current++,this.checkIndex(this.current),this.currentItemPlayList=this.current,this.progress.style.background="linear-gradient(to right, #ff0000 0%, #ff0000 0%, #fff 0%, #fff 100%)",this.setTrack(),this.renderNameTrack(),this.play()}prev(){this.current--,this.checkIndex(this.current),this.currentItemPlayList=this.current,this.progress.style.background="linear-gradient(to right, #ff0000 0%, #ff0000 0%, #fff 0%, #fff 100%)",this.setTrack(),this.renderNameTrack(),this.play()}checkIndex(t){this.current=(t+this.data.length)%this.data.length}play(){this.isPlay||this.toggleIconPlay(),this.isPlay=!0,this.track.play(),this.markItemPLayList(),this.toggleIconPlayItemPLayList()}pause(){this.isPlay=!1,this.track.pause(),this.toggleIconPlay();for(let t=0;t<this.playListButtons.length;t++)this.playListButtons[t].classList.remove("pause")}markItemPLayList(){for(let t=0;t<this.playListItems.length;t++)this.playListItems[t].classList.remove("item-active"),t==this.current&&this.playListItems[t].classList.add("item-active")}toggleIconPlayItemPLayList(){for(let t=0;t<this.playListButtons.length;t++)this.playListButtons[t].classList.remove("pause"),t==this.current&&this.playListButtons[t].classList.add("pause")}toggleIconPlay(){this.playButton.classList.toggle("pause")}toggleVolume(){this.track.muted?this.track.muted=!1:this.track.muted=!0,this.volumeButton.classList.toggle("mute")}initEvents(){this.playButton.addEventListener("pointerdown",(()=>{this.isPlay?this.pause():this.play()})),this.prevButton.addEventListener("pointerdown",(()=>{this.prev()})),this.nextButton.addEventListener("pointerdown",(()=>{this.next()})),this.track.addEventListener("ended",(()=>{this.next()})),this.track.addEventListener("timeupdate",(()=>{this.handleProgress(),this.renderCurrentDuration(),this.renderTotalTime()})),this.volumeButton.addEventListener("pointerdown",(()=>{this.toggleVolume()})),this.progress.addEventListener("mousedown",(()=>this.isMousedownProgress=!0)),this.progress.addEventListener("mouseup",(()=>this.isMousedownProgress=!1)),this.progress.addEventListener("mousemove",(t=>{this.isMousedownProgress&&this.changeProgress(t)})),this.progress.addEventListener("change",(t=>{this.track.currentTime=t.target.value/100*this.track.duration})),this.volumeRange.addEventListener("input",(t=>{const e=t.target.value;this.handleVolumeRange(e)}))}handleVolumeRange(t){this.track.volume=t,0!=t||this.track.muted||(this.toggleVolume(),this.needToggleVolume=!0),t>0&&this.needToggleVolume&&(this.toggleVolume(),this.needToggleVolume=!1),this.volumeRange.style.background=`linear-gradient(to right, #ff0000 0%, #ff0000 ${100*t}%, #fff ${100*t}%, #fff 100%)`}handleProgress(){const t=this.track.currentTime/this.track.duration*100;this.progress.value=t||0,this.progress.style.background=`linear-gradient(to right, #ff0000 0%, #ff0000 ${t}%, #fff ${t}%, #fff 100%)`}changeProgress(t){const e=t.offsetX/this.progress.offsetWidth*this.track.duration;this.track.currentTime=e,this.handleProgress()}}(h),new class{state={language:localStorage.getItem("language")||"en",source:localStorage.getItem("source")||"github",timeVisibility:localStorage.getItem("timeVisibility")||"show",dateVisibility:localStorage.getItem("dateVisibility")||"show",greetingVisibility:localStorage.getItem("greetingVisibility")||"show",quoteVisibility:localStorage.getItem("quoteVisibility")||"show",weatherVisibility:localStorage.getItem("weatherVisibility")||"show",playerVisibility:localStorage.getItem("playerVisibility")||"show",todoVisibility:localStorage.getItem("todoVisibility")||"show"};languagesText={ru:"Язык",en:"Language"};labelEnText={ru:"анг",en:"en"};labelRuText={ru:"рус",en:"ru"};sourcesText={ru:"Фон",en:"Background"};sourcesTagPlaceholderText={ru:"поиск",en:"search"};visibilityText={ru:"Видимость",en:"Visibility"};timeText={ru:"Время",en:"Time"};dateText={ru:"Дата",en:"Date"};greetingText={ru:"Приветствие",en:"Greeting"};quoteText={ru:"Цитата",en:"Quote"};weatherText={ru:"Погода",en:"Weather"};playerText={ru:"Плейер",en:"Player"};todoText={ru:"Список дел",en:"TODO list"};showText={ru:"вкл",en:"show"};hideText={ru:"выкл",en:"hide"};constructor(t,{time:e,date:i,greeting:s,weather:a,quoteContainer:n,audioPlayer:r,todo:o}){this.element=t,this.time=e,this.date=i,this.greeting=s,this.weather=a,this.quote=n,this.player=r,this.todo=o,this.languages=this.element.querySelectorAll(".language"),this.languagesTitle=this.element.querySelector(".languages-title"),this.labelRu=this.element.querySelector(".label-ru"),this.labelEn=this.element.querySelector(".label-en"),this.sources=this.element.querySelectorAll(".source"),this.sourcesTitle=this.element.querySelector(".sources-title"),this.sourcesTagPlaceholder=this.element.querySelector(".sources-tag"),this.visibilityTitle=this.element.querySelector(".visibility-title"),this.visibilityShowLabels=this.element.querySelectorAll(".visibility-container .show"),this.visibilityHideLabels=this.element.querySelectorAll(".visibility-container .hide"),this.timeTitle=this.element.querySelector(".time-title"),this.timeStates=this.element.querySelectorAll(".time-state"),this.dateTitle=this.element.querySelector(".date-title"),this.dateStates=this.element.querySelectorAll(".date-state"),this.greetingTitle=this.element.querySelector(".greeting-title"),this.greetingStates=this.element.querySelectorAll(".greeting-state"),this.quoteTitle=this.element.querySelector(".quote-title"),this.quoteStates=this.element.querySelectorAll(".quote-state"),this.weatherTitle=this.element.querySelector(".weather-title"),this.weatherStates=this.element.querySelectorAll(".weather-state"),this.playerTitle=this.element.querySelector(".player-title"),this.playerStates=this.element.querySelectorAll(".player-state"),this.todoTitle=this.element.querySelector(".todo-title"),this.todoStates=this.element.querySelectorAll(".todo-state"),this.todoIcon=document.querySelector(".icon-todo"),this.render(),this.update(),this.initEvents()}render(){this.languages.forEach((t=>{t.value===this.state.language?t.checked=!0:t.checked=!1})),this.sources.forEach((t=>{t.value===this.state.source?t.checked=!0:t.checked=!1})),this.sourcesTag=this.element.querySelector(".sources-tag"),"github"==this.state.source?this.sourcesTag.style.opacity="0":this.sourcesTag.style.opacity="1",this.timeStates.forEach((t=>{t.value===this.state.timeVisibility?t.checked=!0:t.checked=!1})),this.time.style.opacity="show"===this.state.timeVisibility?"1":"0",this.dateStates.forEach((t=>{t.value===this.state.dateVisibility?t.checked=!0:t.checked=!1})),this.date.style.opacity="show"===this.state.dateVisibility?"1":"0",this.greetingStates.forEach((t=>{t.value===this.state.greetingVisibility?t.checked=!0:t.checked=!1})),this.greeting.style.opacity="show"===this.state.greetingVisibility?"1":"0",this.quoteStates.forEach((t=>{t.value===this.state.quoteVisibility?t.checked=!0:t.checked=!1})),this.quote.style.opacity="show"===this.state.quoteVisibility?"1":"0",this.weatherStates.forEach((t=>{t.value===this.state.weatherVisibility?t.checked=!0:t.checked=!1})),this.weather.style.opacity="show"===this.state.weatherVisibility?"1":"0",this.playerStates.forEach((t=>{t.value===this.state.playerVisibility?t.checked=!0:t.checked=!1})),this.player.style.opacity="show"===this.state.playerVisibility?"1":"0",this.todoStates.forEach((t=>{t.value===this.state.todoVisibility?t.checked=!0:t.checked=!1})),this.todoIcon.style.opacity="show"===this.state.todoVisibility?"1":"0"}update(){this.languagesTitle.textContent=this.languagesText[this.state.language],this.labelRu.textContent=this.labelRuText[this.state.language],this.labelEn.textContent=this.labelEnText[this.state.language],this.sourcesTitle.textContent=this.sourcesText[this.state.language],this.sourcesTagPlaceholder.placeholder=this.sourcesTagPlaceholderText[this.state.language],this.visibilityTitle.textContent=this.visibilityText[this.state.language],this.timeTitle.textContent=this.timeText[this.state.language],this.dateTitle.textContent=this.dateText[this.state.language],this.greetingTitle.textContent=this.greetingText[this.state.language],this.quoteTitle.textContent=this.quoteText[this.state.language],this.weatherTitle.textContent=this.weatherText[this.state.language],this.playerTitle.textContent=this.playerText[this.state.language],this.todoTitle.textContent=this.todoText[this.state.language],this.todoIcon.textContent=this.todoText[this.state.language],this.visibilityShowLabels.forEach((t=>{t.textContent=this.showText[this.state.language]})),this.visibilityHideLabels.forEach((t=>{t.textContent=this.hideText[this.state.language]}))}initEvents(){this.settingIcon=document.querySelector(".icon-setting"),this.closeSetingIcon=document.querySelector(".setting-close"),this.settingIcon.addEventListener("pointerdown",(()=>{this.settingIcon.classList.add("icon-setting-active"),this.element.classList.add("setting-active")})),this.closeSetingIcon.addEventListener("pointerdown",(()=>{this.element.classList.remove("setting-active"),this.settingIcon.classList.remove("icon-setting-active")})),window.addEventListener("pointerdown",(t=>{t.target===this.settingIcon||t.target.closest(".setting")||(this.element.classList.remove("setting-active"),this.settingIcon.classList.remove("icon-setting-active"))})),this.languages.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("language",`${t.value}`),t.dispatchEvent(new CustomEvent("change-language",{bubbles:!0,detail:{language:`${t.value}`}}))}))})),this.sources.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("source",`${t.value}`),"github"===t.value?this.sourcesTag.style.opacity="0":this.sourcesTag.style.opacity="1",t.dispatchEvent(new CustomEvent("change-source",{bubbles:!0,detail:{source:`${t.value}`}}))}))})),this.sourcesTag.addEventListener("change",(t=>{const e=t.target.value;localStorage.setItem("sourcesTag",`${e}`),this.sourcesTag.dispatchEvent(new CustomEvent("change-sourcesTag",{bubbles:!0,detail:{sourcesTag:`${e}`}}))})),this.timeStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("timeVisibility",`${t.value}`),"1"===this.time.style.opacity?this.time.style.opacity="0":this.time.style.opacity="1"}))})),this.dateStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("dateVisibility",`${t.value}`),"1"===this.date.style.opacity?this.date.style.opacity="0":this.date.style.opacity="1"}))})),this.greetingStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("greetingVisibility",`${t.value}`),"1"===this.greeting.style.opacity?this.greeting.style.opacity="0":this.greeting.style.opacity="1"}))})),this.quoteStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("quoteVisibility",`${t.value}`),"1"===this.quote.style.opacity?this.quote.style.opacity="0":this.quote.style.opacity="1"}))})),this.weatherStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("weatherVisibility",`${t.value}`),"1"===this.weather.style.opacity?this.weather.style.opacity="0":this.weather.style.opacity="1"}))})),this.playerStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("playerVisibility",`${t.value}`),"1"===this.player.style.opacity?this.player.style.opacity="0":this.player.style.opacity="1"}))})),this.todoStates.forEach((t=>{t.addEventListener("change",(()=>{localStorage.setItem("todoVisibility",`${t.value}`),"1"===this.todoIcon.style.opacity?this.todoIcon.style.opacity="0":this.todoIcon.style.opacity="1"}))})),document.addEventListener("change-language",(t=>{this.state.language=t.detail.language,this.update()}))}}(c,{time:e,date:i,greeting:s,weather:o,quoteContainer:l,audioPlayer:h,todo:u}),new class{currentLanguage=localStorage.getItem("language")||"en";currentActiveTodo=localStorage.getItem("activeTODO")||"";currentDoneTodo=localStorage.getItem("doneTODO")||"";placeholderText={ru:"печатать здесь",en:"type here"};labelActiveText={ru:"Активные",en:"Active"};labelDoneText={ru:"Сделанные",en:"Done"};constructor(t){this.element=t,this.addButton=this.element.querySelector(".add-todo"),this.enter=this.element.querySelector(".enter-todo"),this.labelActiveTodo=this.element.querySelector(".label-active-todo"),this.labelDoneTodo=this.element.querySelector(".label-done-todo"),this.listActiveTodo=this.element.querySelector(".list-active-todo"),this.listDoneTodo=this.element.querySelector(".list-done-todo"),this.render(),this.initEvents(),this.update()}getTemplateTodo(){return`\n      <li class="list-item">\n        <p>${this.enteredTodo}</p>\n        <div class="done-delete-container">\n          <button class="done-button">&#10003;</button>\n          <button class="delete-button">-</button>\n        </div>\n      </li>\n    `}render(){this.listActiveTodo.innerHTML=localStorage.getItem("activeTODO"),this.listDoneTodo.innerHTML=localStorage.getItem("doneTODO")}initEvents(){this.todoIcon=document.querySelector(".icon-todo"),this.closeTodoIcon=document.querySelector(".todo-close"),document.addEventListener("change-language",(t=>{this.currentLanguage=t.detail.language,this.update()})),this.todoIcon.addEventListener("pointerdown",(()=>{this.todoIcon.classList.add("icon-todo-active"),this.element.classList.add("todo-active")})),this.closeTodoIcon.addEventListener("pointerdown",(()=>{this.element.classList.remove("todo-active"),this.todoIcon.classList.remove("icon-todo-active")})),window.addEventListener("pointerdown",(t=>{t.target===this.todoIcon||t.target.closest(".todo")||t.target.closest(".delete-button")||(this.element.classList.remove("todo-active"),this.todoIcon.classList.remove("icon-todo-active"))})),this.enter.addEventListener("input",(t=>{this.enteredTodo=t.target.value})),this.addButton.addEventListener("pointerdown",(()=>{this.addTodo(),this.enter.value=null})),this.element.addEventListener("pointerdown",(t=>{if(!t.target.closest(".delete-button"))return;const e=t.target.closest(".list-item");this.deleteTodo(e)})),this.element.addEventListener("pointerdown",(t=>{if(!t.target.closest(".done-button"))return;const e=t.target.closest(".list-item");this.moveToDone(e)}))}addTodo(){if(!this.enteredTodo)return;const t=document.createElement("div");t.innerHTML=this.getTemplateTodo(),this.listActiveTodo.append(t.firstElementChild),this.enteredTodo=null,this.setActiveStorage()}deleteTodo(t){t.remove(),this.setActiveStorage(),this.setDoneStorage()}moveToDone(t){this.listDoneTodo.prepend(t),this.setActiveStorage(),this.setDoneStorage()}setActiveStorage(){const t=this.listActiveTodo.innerHTML;localStorage.setItem("activeTODO",t)}setDoneStorage(){const t=this.listDoneTodo.innerHTML;localStorage.setItem("doneTODO",t)}update(){this.enter.placeholder=this.placeholderText[this.currentLanguage],this.labelActiveTodo.textContent=this.labelActiveText[this.currentLanguage],this.labelDoneTodo.textContent=this.labelDoneText[this.currentLanguage]}}(u),console.log('\nВаша оценка - 163 балла - выполнены все пункты\nВыполненные пункты:\n1) время выводится в 24-часовом формате, например: 21:01:00 \n2) время обновляется каждую секунду - часы идут. Когда меняется одна из цифр, остальные при этом не меняют своё положение на странице (время не дёргается) \n3) выводится день недели, число, месяц, например: "Воскресенье, 16 мая" / "Sunday, May 16" / "Нядзеля, 16 траўня" \n4) текст приветствия меняется в зависимости от времени суток (утро, день, вечер, ночь). Проверяется соответствие приветствия текущему времени суток \n5) пользователь может ввести своё имя. При перезагрузке страницы приложения имя пользователя сохраняется \n6) ссылка на фоновое изображение формируется с учётом времени суток и случайного номера изображения (от 01 до 20). Проверяем, что при перезагрузке страницы фоновое изображение изменилось. Если не изменилось, перезагружаем страницу ещё раз \n7) изображения можно перелистывать кликами по стрелкам, расположенным по бокам экрана.Изображения перелистываются последовательно - после 18 изображения идёт 19 (клик по правой стрелке), перед 18 изображением идёт 17 (клик по левой стрелке) \n8) изображения перелистываются по кругу: после двадцатого изображения идёт первое (клик по правой стрелке), перед 1 изображением идёт 20 (клик по левой стрелке) \n9) при смене слайдов важно обеспечить плавную смену фоновых изображений. Плавную смену фоновых изображений не проверяем: 1) при загрузке и перезагрузке страницы 2) при открытой консоли браузера 3) при слишком частых кликах по стрелкам для смены изображения \n10) при перезагрузке страницы приложения указанный пользователем город сохраняется, данные о нём хранятся в local storage\n11) для указанного пользователем населённого пункта выводятся данные о погоде, если их возвращает API. Данные о погоде включают в себя: иконку погоды, описание погоды, температуру в °C, скорость ветра в м/с, относительную влажность воздуха в %. Числовые параметры погоды округляются до целых чисел \n12) выводится уведомление об ошибке при вводе некорректных значений, для которых API не возвращает погоду (пустая строка или бессмысленный набор символов) \n13) при загрузке страницы приложения отображается рандомная цитата и её автор \n14) при перезагрузке страницы цитата обновляется (заменяется на другую). Есть кнопка, при клике по которой цитата обновляется (заменяется на другую) \n15) при клике по кнопке Play/Pause проигрывается первый трек из блока play-list, иконка кнопки меняется на Pause \n16) при клике по кнопке Play/Pause во время проигрывания трека, останавливается проигрывание трека, иконка кнопки меняется на Play \n17) треки пролистываются по кругу - после последнего идёт первый (клик по кнопке Play-next), перед первым - последний (клик по кнопке Play-prev) \n18) трек, который в данный момент проигрывается, в блоке Play-list выделяется стилем \n19) после окончания проигрывания первого трека, автоматически запускается проигрывание следующего. Треки проигрываются по кругу: после последнего снова проигрывается первый. \n20) добавлен прогресс-бар в котором отображается прогресс проигрывания \n21) при перемещении ползунка прогресс-бара меняется текущее время воспроизведения трека \n22) над прогресс-баром отображается название трека \n23) отображается текущее и общее время воспроизведения трека \n24) есть кнопка звука при клике по которой можно включить/отключить звук \n25) добавлен регулятор громкости, при перемещении ползунка регулятора громкости меняется громкость проигрывания звука \n26) можно запустить и остановить проигрывания трека кликом по кнопке Play/Pause рядом с ним в плейлисте \n27) переводится язык и меняется формат отображения даты \n28) переводится приветствие \n29) переводится прогноз погоды в т.ч описание погоды \n30) переводится цитата дня  \n31) переводятся настройки приложения, при переключении языка приложения в настройках, язык настроек тоже меняется \n32) в качестве источника изображений может использоваться Unsplash API \n33) в качестве источника изображений может использоваться Flickr API \n34) в настройках приложения можно указать язык приложения (en/ru или en/be)  \n35) язык настроек определяется языком приложения, при переключении языка приложения, язык настроек тоже меняется \n36) в настройках приложения можно указать источник получения фото для фонового изображения: коллекция изображений GitHub, Unsplash API, Flickr API \n37) если источником получения фото указан API, в настройках приложения можно указать тег, для которого API будет присылает фото \n38) в настройках приложения можно скрыть/отобразить любой из блоков, которые находятся на странице: время, дата, приветствие, цитата дня, прогноз погоды, аудиоплеер, список дел/список ссылок/ваш собственный дополнительный функционал \n39) Скрытие и отображение блоков происходит плавно, не влияя на другие элементы, которые находятся на странице, или плавно смещая их \n40) настройки приложения сохраняются при перезагрузке страницы \n41) ToDo List - список дел (почти, но не совсем как в оригинальном приложении) \n')})();